#include "stm32f4xx_hal.h"

// Definiciones
#define MAX_COUNT_BIN 15 // 4 bits (0-15)
#define MAX_COUNT_DECADE 9 // 4 bits en décadas (0-9)

// Variables
uint8_t count = 0;
uint8_t mode = 0; // 0: Binario, 1: Decada

// Prototipos de funciones
void display_count(uint8_t count);
void increment_count(void);
void decrement_count(void);
void change_mode(void);

// Callback para interrupciones de botones
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin) {
    if (GPIO_Pin == GPIO_PIN_0) { // Botón de modo
        change_mode();
    }
    else if (GPIO_Pin == GPIO_PIN_1) { // Botón incrementar
        increment_count();
    }
    else if (GPIO_Pin == GPIO_PIN_2) { // Botón decrementar
        decrement_count();
    }
}

void display_count(uint8_t count) {
    // Muestra el valor del contador en los LEDs
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_0, (count & 0x1) ? GPIO_PIN_SET : GPIO_PIN_RESET);
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_1, (count & 0x2) ? GPIO_PIN_SET : GPIO_PIN_RESET);
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_2, (count & 0x4) ? GPIO_PIN_SET : GPIO_PIN_RESET);
    HAL_GPIO_WritePin(GPIOA, GPIO_PIN_3, (count & 0x8) ? GPIO_PIN_SET : GPIO_PIN_RESET);
}

void increment_count(void) {
    if (mode == 0) { // Modo binario
        count = (count < MAX_COUNT_BIN) ? count + 1 : 0;
    } else { // Modo décadas
        count = (count < MAX_COUNT_DECADE) ? count + 1 : 0;
    }
    display_count(count);
}

void decrement_count(void) {
    if (mode == 0) { // Modo binario
        count = (count > 0) ? count - 1 : MAX_COUNT_BIN;
    } else { // Modo décadas
        count = (count > 0) ? count - 1 : MAX_COUNT_DECADE;
    }
    display_count(count);
}

void change_mode(void) {
    mode = !mode; // Cambia entre 0 y 1
    count = 0; // Reinicia el contador al cambiar de modo
    display_count(count);
}

int main(void) {
    HAL_Init();
    // Inicialización de GPIO y demás configuraciones

    while (1) {
        // Lógica adicional si es necesario
    }
}
